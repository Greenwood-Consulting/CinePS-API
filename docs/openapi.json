{
    "openapi": "3.0.0",
    "info": {
        "title": "My App",
        "description": "This is an awesome app!",
        "version": "1.0.0"
    },
    "paths": {
        "/api/newmembre": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Cr\u00e9er un nouveau membre",
                "operationId": "post_createMembre",
                "requestBody": {
                    "description": "Donn\u00e9es du nouveau membre",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membre"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Membre cr\u00e9\u00e9 avec succ\u00e8s",
                        "headers": {
                            "Location": {
                                "description": "URL du membre cr\u00e9\u00e9",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membre2"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/newSemaine": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Cr\u00e9er une nouvelle semaine",
                "operationId": "post_createSemaine",
                "requestBody": {
                    "description": "Donn\u00e9es de la nouvelle semaine",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "proposeur_id": {
                                        "description": "ID du proposeur",
                                        "type": "integer"
                                    },
                                    "jour": {
                                        "description": "Jour de la semaine (format Y-m-d)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "type_semaine": {
                                        "description": "Type de la semaine",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Semaine cr\u00e9\u00e9e avec succ\u00e8s",
                        "headers": {
                            "Location": {
                                "description": "URL de la semaine cr\u00e9\u00e9e",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Semaine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/films/{id}": {
            "put": {
                "summary": "Modifier un film existant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifiant du film \u00e0 modifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Donn\u00e9es du film \u00e0 modifier",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Film"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Film modifi\u00e9 avec succ\u00e8s"
                    },
                    "400": {
                        "description": "Donn\u00e9es invalides"
                    },
                    "403": {
                        "description": "Acc\u00e8s refus\u00e9"
                    },
                    "404": {
                        "description": "Film non trouv\u00e9"
                    }
                }
            }
        },
        "/api/Allfilms": {
            "get": {
                "summary": "R\u00e9cup\u00e9rer tous les films",
                "responses": {
                    "200": {
                        "description": "Liste des films r\u00e9cup\u00e9r\u00e9e avec succ\u00e8s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Film2"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/api/historique": {
            "get": {
                "tags": [
                    "Historique"
                ],
                "summary": "Retrieve the history of past weeks with propositions, votes, and notes",
                "description": "This endpoint provides the historical data of past weeks, including propositions, votes, and notes for each member, along with the victorious film for each week.",
                "operationId": "get_app_historique",
                "responses": {
                    "200": {
                        "description": "Successful response with historical data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "semaines": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "jour": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "propositions": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "film": {
                                                                    "type": "object"
                                                                },
                                                                "vote": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "membre": {
                                                                                "type": "string"
                                                                            },
                                                                            "vote": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "note": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "membre": {
                                                                                "type": "integer"
                                                                            },
                                                                            "note": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "film_victorieux": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "membres": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "Prenom": {
                                                        "type": "string"
                                                    },
                                                    "Nom": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/isVoteTermine/{id_semaine}": {
            "get": {
                "summary": "V\u00e9rifie si le vote pour une semaine est termin\u00e9",
                "parameters": [
                    {
                        "name": "id_semaine",
                        "in": "path",
                        "description": "ID de la semaine",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indique si le vote est termin\u00e9",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                },
                                "example": true
                            }
                        }
                    },
                    "404": {
                        "description": "Semaine non trouv\u00e9e"
                    }
                }
            }
        },
        "/api/membres": {
            "get": {
                "tags": [
                    "Membre"
                ],
                "summary": "Retrieve all membres",
                "description": "Fetches a list of all membres",
                "operationId": "get_app_membre",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Membre3"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Membre not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/membres/{id}": {
            "get": {
                "tags": [
                    "Membre"
                ],
                "summary": "Retrieve membre details",
                "description": "Fetches details of a specific membre by ID",
                "operationId": "get_detailMembre",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the membre",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Membre details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membre3"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Membre not found"
                    }
                }
            }
        },
        "/api/actifMembre/{id_membre}": {
            "patch": {
                "tags": [
                    "Membre"
                ],
                "summary": "Update membre activation status",
                "description": "Modify the activation status of a membre by ID",
                "operationId": "patch_actifMembre",
                "parameters": [
                    {
                        "name": "id_membre",
                        "in": "path",
                        "description": "The ID of the membre",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update membre activation status",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "actif": {
                                        "description": "Activation status",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Membre activation status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membre3"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Membre not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/note": {
            "post": {
                "tags": [
                    "Note"
                ],
                "summary": "Cr\u00e9er une nouvelle note",
                "description": "Permet de cr\u00e9er une nouvelle note pour un film par un membre. Si aucune note n'est fournie, cela correspond \u00e0 une abstention.",
                "operationId": "post_createNote",
                "requestBody": {
                    "description": "Donn\u00e9es n\u00e9cessaires pour cr\u00e9er une note",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "membre_id": {
                                        "description": "ID du membre notateur",
                                        "type": "integer"
                                    },
                                    "film_id": {
                                        "description": "ID du film \u00e0 noter",
                                        "type": "integer"
                                    },
                                    "note": {
                                        "description": "Note attribu\u00e9e au film (optionnelle)",
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note cr\u00e9\u00e9e avec succ\u00e8s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Requ\u00eate invalide"
                    },
                    "404": {
                        "description": "Membre ou film introuvable"
                    }
                }
            }
        },
        "/api/filmsGagnants": {
            "get": {
                "tags": [
                    "Profil"
                ],
                "summary": "Retrieve all winning films from past weeks",
                "operationId": "get_filmsGagants",
                "responses": {
                    "200": {
                        "description": "List of winning films",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Film"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/proposition": {
            "post": {
                "tags": [
                    "Proposition"
                ],
                "summary": "Cr\u00e9er une nouvelle proposition et le film associ\u00e9",
                "operationId": "post_createProposition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "titre_film": {
                                        "description": "Titre du film",
                                        "type": "string"
                                    },
                                    "sortie_film": {
                                        "description": "Ann\u00e9e de sortie du film",
                                        "type": "string"
                                    },
                                    "imdb_film": {
                                        "description": "Lien IMDb du film",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Proposition cr\u00e9\u00e9e avec succ\u00e8s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/proposition/{proposition_id}": {
            "delete": {
                "tags": [
                    "Proposition"
                ],
                "summary": "Supprime une proposition",
                "description": "Supprime une proposition existante \u00e0 partir de son ID",
                "operationId": "delete_deleteProposition",
                "parameters": [
                    {
                        "name": "proposition_id",
                        "in": "path",
                        "description": "ID de la proposition \u00e0 supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Suppression r\u00e9ussie, aucun contenu retourn\u00e9"
                    },
                    "404": {
                        "description": "Proposition non trouv\u00e9e",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Proposition not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/secondeChance/{proposeur_id}": {
            "post": {
                "tags": [
                    "Proposition"
                ],
                "summary": "R\u00e9cup\u00e9rer les propositions perdantes pour un proposeur donn\u00e9",
                "operationId": "post_seconde_chance",
                "parameters": [
                    {
                        "name": "proposeur_id",
                        "in": "path",
                        "description": "ID du proposeur",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des propositions perdantes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Proposition"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/propositionOpenAI": {
            "post": {
                "tags": [
                    "Proposition"
                ],
                "summary": "Cr\u00e9er des propositions de films bas\u00e9es sur un th\u00e8me en utilisant OpenAI",
                "operationId": "post_createPropositionApi",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "theme": {
                                        "description": "Th\u00e8me pour g\u00e9n\u00e9rer des propositions de films",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Films et propositions enregistr\u00e9s avec succ\u00e8s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les films et propositions ont \u00e9t\u00e9 enregistr\u00e9s en base de donn\u00e9es"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/currentSemaine": {
            "get": {
                "tags": [
                    "Semaine"
                ],
                "summary": "Get the current week data",
                "description": "Returns the data of the current week based on the current date.",
                "operationId": "get_currentSemaine",
                "responses": {
                    "200": {
                        "description": "Successful response with current week data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Semaine"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/nextProposeurs/{id_semaine}": {
            "get": {
                "tags": [
                    "Semaine"
                ],
                "summary": "Get the list of proposers for upcoming weeks",
                "description": "Returns the list of proposers for the weeks following the given week ID.",
                "operationId": "get_nextProposeurs",
                "parameters": [
                    {
                        "name": "id_semaine",
                        "in": "path",
                        "description": "The ID of the current week to fetch proposers for subsequent weeks",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the list of proposers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Semaine"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/votes/{id_semaine}": {
            "get": {
                "tags": [
                    "Semaine"
                ],
                "summary": "Get votes and ratings for a specific week",
                "description": "Returns the votes and ratings for all propositions of a specific week.",
                "operationId": "get_votes",
                "parameters": [
                    {
                        "name": "id_semaine",
                        "in": "path",
                        "description": "The ID of the week to fetch votes and ratings for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with votes and ratings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Semaine"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/semaine/{id_semaine}": {
            "patch": {
                "tags": [
                    "Semaine"
                ],
                "summary": "Update a specific week",
                "description": "Updates the details of a specific week, including propositions, theme, winning proposition, and other attributes.",
                "operationId": "patch_updateSemaine",
                "parameters": [
                    {
                        "name": "id_semaine",
                        "in": "path",
                        "description": "The ID of the week to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to update the week",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "proposition_terminee": {
                                        "description": "Indicates if the propositions are finished",
                                        "type": "boolean"
                                    },
                                    "theme": {
                                        "description": "The theme of the week",
                                        "type": "string"
                                    },
                                    "proposition_gagnante": {
                                        "description": "ID of the winning proposition",
                                        "type": "integer"
                                    },
                                    "proposeur_id": {
                                        "description": "ID of the proposer",
                                        "type": "integer"
                                    },
                                    "raison_changement_film": {
                                        "description": "Reason for changing the film",
                                        "type": "string"
                                    },
                                    "type_semaine": {
                                        "description": "Type of the week (e.g., PSDroitDivin)",
                                        "type": "string"
                                    },
                                    "droit_divin_titre_film": {
                                        "description": "Title of the film for PSDroitDivin",
                                        "type": "string"
                                    },
                                    "droit_divin_date_film": {
                                        "description": "Release date of the film for PSDroitDivin",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "droit_divin_lien_imdb": {
                                        "description": "IMDB link of the film for PSDroitDivin",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with updated week data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Semaine"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getNbPropositionsParProposeur": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get the number of propositions per proposer",
                "description": "Retrieve the count of propositions grouped by proposer, excluding specific types.",
                "operationId": "get_app_get_nbproposeur",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "proposeur": {
                                                "description": "Name of the proposer",
                                                "type": "string"
                                            },
                                            "nb_semaines": {
                                                "description": "Number of weeks",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/usersSatisfaction": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get user satisfaction data",
                "description": "Retrieve satisfaction votes for all users, sorted by satisfaction level.",
                "operationId": "get_app_users_satisfaction",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user": {
                                                "description": "User details",
                                                "type": "object"
                                            },
                                            "satisfactionVote": {
                                                "description": "Satisfaction vote of the user",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/usersNotesMoyennes": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get average notes per user",
                "description": "Retrieve the average notes given by users, including the number of notes, sorted by average note.",
                "operationId": "get_app_users_notes_moyennes",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user": {
                                                "description": "User details",
                                                "type": "object"
                                            },
                                            "noteMoyenne": {
                                                "description": "Average note of the user",
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "nbNotes": {
                                                "description": "Number of notes given by the user",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/filmVictorieux/{id_semaine}": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Retrieve the victorious film(s) for a given week",
                "description": "Returns the film(s) with the highest votes for the specified week. Multiple films can be returned in case of a tie.",
                "operationId": "get_FilmVictorieux",
                "parameters": [
                    {
                        "name": "id_semaine",
                        "in": "path",
                        "description": "The ID of the week to retrieve the victorious film(s) for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the victorious film(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Proposition"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Week not found"
                    }
                }
            }
        },
        "/api/avote/{id_membre}": {
            "post": {
                "tags": [
                    "Vote"
                ],
                "summary": "Register a new entry in the AVote table",
                "description": "Creates a new AVote entry for the specified member and the current week.",
                "operationId": "post_aVote",
                "parameters": [
                    {
                        "name": "id_membre",
                        "in": "path",
                        "description": "The ID of the member registering the vote",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "AVote entry successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AVote"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found"
                    }
                }
            }
        },
        "/api/saveVoteProposition": {
            "post": {
                "tags": [
                    "Vote"
                ],
                "summary": "Save a vote and update the score of a proposition",
                "description": "Registers a vote for a proposition, updates the proposition's score, and creates a new Vote entry.",
                "operationId": "post_saveVoteProposition",
                "requestBody": {
                    "description": "JSON payload containing the member ID, proposition ID, and vote value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "membre": {
                                        "description": "The ID of the member voting",
                                        "type": "integer"
                                    },
                                    "proposition": {
                                        "description": "The ID of the proposition being voted on",
                                        "type": "integer"
                                    },
                                    "vote": {
                                        "description": "The value of the vote (positive or negative)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vote successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member or proposition not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Membre": {
                "required": [
                    "nom",
                    "prenom"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "prenom": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Membre2": {
                "type": "object"
            },
            "Semaine": {
                "required": [
                    "id",
                    "jour",
                    "theme",
                    "propositions",
                    "proposeur",
                    "votants",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "jour": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "theme": {
                        "type": "string"
                    },
                    "propositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Proposition"
                        }
                    },
                    "proposeur": {
                        "$ref": "#/components/schemas/Membre4"
                    },
                    "votants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AVote2"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "filmVu": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Film3"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Film": {
                "type": "object"
            },
            "Film2": {
                "type": "object"
            },
            "Membre3": {
                "required": [
                    "id",
                    "nom",
                    "prenom",
                    "mail",
                    "mdp",
                    "actif"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "nom": {
                        "type": "string"
                    },
                    "prenom": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    },
                    "mdp": {
                        "type": "string"
                    },
                    "actif": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Note": {
                "type": "object"
            },
            "Proposition": {
                "required": [
                    "id",
                    "film",
                    "score"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "film": {
                        "$ref": "#/components/schemas/Film3"
                    },
                    "score": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AVote": {
                "required": [
                    "id",
                    "votant",
                    "semaine"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "votant": {
                        "$ref": "#/components/schemas/Membre3"
                    },
                    "semaine": {
                        "$ref": "#/components/schemas/Semaine2"
                    }
                },
                "type": "object"
            },
            "Vote": {
                "required": [
                    "id",
                    "semaine",
                    "membre",
                    "proposition",
                    "vote"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "semaine": {
                        "$ref": "#/components/schemas/Semaine2"
                    },
                    "membre": {
                        "$ref": "#/components/schemas/Membre3"
                    },
                    "proposition": {
                        "$ref": "#/components/schemas/Proposition2"
                    },
                    "vote": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Membre4": {
                "required": [
                    "id",
                    "nom",
                    "prenom"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "nom": {
                        "type": "string"
                    },
                    "prenom": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AVote2": {
                "required": [
                    "votant"
                ],
                "properties": {
                    "votant": {
                        "$ref": "#/components/schemas/Membre4"
                    }
                },
                "type": "object"
            },
            "Film3": {
                "required": [
                    "id",
                    "titre",
                    "date",
                    "imdb"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "titre": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "imdb": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Semaine2": {
                "required": [
                    "id",
                    "jour",
                    "theme",
                    "propositions",
                    "proposeur",
                    "votants",
                    "type",
                    "propositionTermine"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "jour": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "theme": {
                        "type": "string"
                    },
                    "propositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Proposition2"
                        }
                    },
                    "proposeur": {
                        "$ref": "#/components/schemas/Membre3"
                    },
                    "votants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AVote"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "filmVu": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Film4"
                            }
                        ]
                    },
                    "propositionTermine": {
                        "type": "boolean"
                    },
                    "raisonPropositionChoisie": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Proposition2": {
                "required": [
                    "id",
                    "film",
                    "score",
                    "semaine"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "film": {
                        "$ref": "#/components/schemas/Film4"
                    },
                    "score": {
                        "type": "integer"
                    },
                    "semaine": {
                        "$ref": "#/components/schemas/Semaine2"
                    }
                },
                "type": "object"
            },
            "Film4": {
                "required": [
                    "id",
                    "titre",
                    "date",
                    "imdb",
                    "propositions",
                    "notes",
                    "sortieFilm"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "titre": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "imdb": {
                        "type": "string"
                    },
                    "propositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Proposition2"
                        }
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note2"
                        }
                    },
                    "moyenne": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "ecartType": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "sortieFilm": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Note2": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "integer",
                        "nullable": true
                    },
                    "film": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Film4"
                            }
                        ]
                    },
                    "membre": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Membre3"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Historique",
            "description": "Historique"
        },
        {
            "name": "Membre",
            "description": "Membre"
        },
        {
            "name": "Note",
            "description": "Note"
        },
        {
            "name": "Profil",
            "description": "Profil"
        },
        {
            "name": "Proposition",
            "description": "Proposition"
        },
        {
            "name": "Semaine",
            "description": "Semaine"
        },
        {
            "name": "Statistics",
            "description": "Statistics"
        },
        {
            "name": "Vote",
            "description": "Vote"
        }
    ]
}
